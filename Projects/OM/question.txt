question

I am trying to use DataFrame.apply() to add new columns to a dataframe. 

The original dataframe `om' contains columns representing scores, changes in scores, and the date range of the change in score. `om' is indexed on EntityID and Date

---

>>> om.info() 
<class 'pandas.core.frame.DataFrame'>
MultiIndex: 100 entries, (4198, Timestamp('2018-09-10 00:00:00')) to (6211, Timestamp('2016-11-03 00:00:00'))
Data columns (total 23 columns):
 #   Column                    Non-Null Count  Dtype
---  ------                    --------------  -----
 0   Childcare                 79 non-null     float64
 1   Childcare_d               37 non-null     float64
 2   Education                 97 non-null     float64
 3   Education_d               50 non-null     float64
 4   Employment                95 non-null     float64
 5   Employment_d              50 non-null     float64
 6   Financial Literacy        11 non-null     float64  
 7   Financial Literacy_d      1 non-null      float64  
 8   Food Security             34 non-null     float64
 9   Food Security_d           6 non-null      float64
 10  Health Care/Services      9 non-null      float64
 11  Health Care/Services_d    1 non-null      float64
 12  Housing                   96 non-null     float64
 13  Housing_d                 50 non-null     float64
 14  Income                    93 non-null     float64
 15  Income_d                  48 non-null     float64
 16  Nutrition                 6 non-null      float64
 17  Nutrition_d               0 non-null      float64
 18  Transportation            68 non-null     float64
 19  Transportation_d          26 non-null     float64
 20  Program Collecting Score  100 non-null    object
 21  LastScoreDate             53 non-null     datetime64[ns]
 22  ScoreDate                 100 non-null    datetime64[ns]
dtypes: datetime64[ns](2), float64(20), object(1)
memory usage: 717.8+ KB

There is another data set that contains data on client services. For each row in `om' I want to add some number of columns based on the services recieved by that client in that date range.


---

services = import_service_data()

def pivot_services(row, services = services):
	print(row.name[0])
	try:
		client_services = services[services.EntityID == row.name[0]]
		time_frame = client_services[(client_services.index >= row.LastScoreDate) & (client_services.index < row.ScoreDate)]
		sums = time_frame.groupby('Description')['Total'].agg(sum)
		with_dummies = pd.concat([row,sums])
		with_dummies.name = row.name
	except IndexError:
		# IndexError is thrown when a client received no services in the date range
		return row 
	return with_dummies